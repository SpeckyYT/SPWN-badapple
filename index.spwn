// https://github.com/SpeckyYT/SPWN-canvas
canvas = import '../canvas/canvas.spwn'

screen = ?g

let WIDTH = 36
let HEIGHT = 28
let FWIDTH = WIDTH + 2  // 1: \n | 2: \r\n
let PIXELSIZE = 10/HEIGHT
let SLICEH = 1
let PIXELS = WIDTH * HEIGHT

let STARTFROM = 0       // the frame it should start the animation form
let MAXGENFRAMES = -1   // maximal amount of frames to draw
let DELAY = 0           // the time it waits to start playing

let badCanvas = canvas::new(
    0, 0,
    WIDTH, HEIGHT-SLICEH,
    10/(HEIGHT-SLICEH),
    screen
)

let previousFrame = {}

let DELTATIME = 1/20    // 20 fps

// https://raw.githubusercontent.com/kevinjycui/bad-apple/master/april-fools/input.txt
let file = @file::new('input.txt')

let times = 0

for index in ..(1/0) {
    if MAXGENFRAMES >= 0 && times >= MAXGENFRAMES {break}

    $.print(index, ' frames done')

    let currentFrame = []
    for _ in 0..100 {
        if currentFrame.length >= HEIGHT {break}

        let seekIndex =
            STARTFROM * FWIDTH * HEIGHT +   // BASE INDEX
            times * FWIDTH * HEIGHT +       // FRAME INDEX
            currentFrame.length * FWIDTH    // LINE INDEX

        file.seek(seekIndex)
        currentFrame.push(file.read(WIDTH))
    }
    if currentFrame.length >= HEIGHT {
        for i in 0..PIXELS {
            if i / HEIGHT >= HEIGHT {break}

            let y = HEIGHT - $.floor(i / HEIGHT)
            let x = i % WIDTH

            if x >= badCanvas.colors.length {continue}
            if y >= badCanvas.colors[x].length {continue}

            let char = currentFrame[y][x]

            let key = x as @string + '-' + y as @string
            if previousFrame has key {
                if char == previousFrame.get(key) {continue}
            }
            previousFrame.set(key,char)

            let mirroredY = badCanvas.colors[x].length-(y+1)

            let color = 255 if char == '1' else 0

            call_with_delay(index * DELTATIME + DELAY, !{
                badCanvas.colors[x][mirroredY].set(color,color,color)
            })
        }
    }
    times++
}

hide_player()
screen.move(15,0,1)
screen.lock_to_player(true,false)
